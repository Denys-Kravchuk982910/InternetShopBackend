{"version":3,"file":"static/js/107.dbeeb51a.chunk.js","mappings":"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","sources":["components/MainLayout/Catalog/Filter/customButton.js","components/MainLayout/Order/Fields/Field.js","components/MainLayout/Order/Fields/PhoneField.js","components/MainLayout/Order/Validation/fieldValidation.js","components/MainLayout/Order/index.js"],"sourcesContent":["import { Checkbox } from \"antd\";\r\nimport \"./style/filter.css\"\r\nimport React from \"react\";\r\n\r\nconst CustomButton = ({text, type=\"button\"}) => {\r\n\r\n    const onClick =()=> {\r\n        //ant-checkbox-input\r\n        let items = document.getElementsByClassName(\"ant-checkbox-input\");\r\n        \r\n        \r\n        for (var i = 0; i < items.length; i++) {\r\n            if(items[i].checked) {\r\n                let item = items[i].closest(\".ant-checkbox-wrapper-checked\");\r\n                item.click();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <button onClick={onClick} className=\"button-49\" type={type} role=\"button\"><span className=\"text\">{text}</span></button>\r\n    </>);\r\n}\r\n\r\nexport default CustomButton;\r\n","import { UserOutlined } from '@ant-design/icons';\r\nimport { Input } from 'antd';\r\nimport { useField } from 'formik';\r\nimport classNames from 'classnames';\r\n\r\nconst Field = ({placeholder,label, ...props}) => {\r\n\r\n    const [field, meta] = useField(props);\r\n\r\n    return (<>\r\n        <div className=\"form-group\">\r\n            <label htmlFor={props.name || props.id}>{label}</label>\r\n            <input {...field} {...props} placeholder={placeholder} \r\n            className={classNames(\"form-control\", {\"is-valid\": (!meta.error && meta.touched)},\r\n             {\"is-invalid\": (meta.error && meta.touched)})}/>\r\n\r\n             {meta.error && <div className=\"invalid-feedback\">\r\n                 {meta.error}\r\n                 </div>}\r\n        </div>\r\n        \r\n         \r\n    </>);\r\n}\r\n\r\nexport default Field;","import { UserOutlined } from '@ant-design/icons';\r\nimport { Input } from 'antd';\r\nimport { useField } from 'formik';\r\nimport classNames from 'classnames';\r\nimport IMask from 'imask';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst PhoneField = ({placeholder,label, ...props}) => {\r\n\r\n    const [field, meta] = useField(props);\r\n    const [mask, setMask] = useState();\r\n\r\n    useEffect(() => {\r\n        var element = document.getElementsByClassName('phoneNumber')[0];\r\n        var maskOptions = {\r\n        mask: '+{38} (000) 000 00 00'\r\n        };\r\n        var mask = IMask(element, maskOptions);\r\n        setMask(mask);\r\n    }, []);\r\n\r\n    return (<>\r\n        <div className=\"form-group\">\r\n            <label htmlFor={props.name || props.id}>{label}</label>\r\n            <input {...field} {...props} placeholder={placeholder} \r\n            className={classNames(\"phoneNumber\",\"form-control\", {\"is-valid\": (!meta.error && meta.touched)},\r\n             {\"is-invalid\": (meta.error && meta.touched)})}/>\r\n\r\n             {meta.error && <div className=\"invalid-feedback\">\r\n                 {meta.error}\r\n                 </div>}\r\n        </div>\r\n        \r\n         \r\n    </>);\r\n}\r\n\r\nexport default PhoneField;","import * as Yup from 'yup';\r\n\r\nexport default Yup.object({\r\n    name: Yup.string().required(\"Поле не може бути пустим!\"),\r\n    surname: Yup.string().required(\"Поле не може бути пустим!\"),\r\n    parentName: Yup.string().required(\"Поле не може бути пустим!\"),\r\n    phoneNumber: Yup.string().required(\"Поле не може бути пустим!\").matches(/^\\+38 \\(([0-9]){3}\\) ([0-9]){3} [0-9]{2} [0-9]{2}$/, \"Введіть номер телефону коректно\"),\r\n    email: Yup.string().required(\"Поле не може бути пустим!\").email(\"Введіть email коректно\"),\r\n    post: Yup.string().required(\"Поле не може бути пустим!\"),\r\n});","import { Formik, Form } from \"formik\";\r\nimport Field from \"./Fields/Field\";\r\nimport PhoneField from \"./Fields/PhoneField\";\r\nimport useCookie from \"react-use-cookie\";\r\n\r\nimport { Col, Row } from \"antd\";\r\nimport yupValidation from './Validation/fieldValidation'\r\nimport CustomButton from './../Catalog/Filter/customButton'\r\nimport './Validation/styles/valid.css';\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axiosService from \"../../../axios/axiosService\";\r\nimport { clearFilters } from \"../../../redux/reducers/cartReducer\";\r\nimport { setNullItem } from \"../../../redux/reducers/pageReducer\";\r\nimport { setProducts } from \"../../../redux/reducers/productReducer\";\r\nconst Order = () => {\r\n\r\n    const [productId, setProductId] = useCookie('pr_id', 0);\r\n    const carts = useSelector(cart => cart.cart);\r\n    const [visible, setVisible] = useState(true);\r\n    const [orderId, setOrderId] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    const pushOrder = async (values) => {\r\n\r\n        let obj = {...values, \r\n            targets: JSON.stringify([...(carts.map((item) => {\r\n                return {\r\n                    size: item.size,\r\n                    id: item.id\r\n                }\r\n            }))])};\r\n        // let res = await axiosService.pushOrder(\r\n        //     obj);\r\n        setOrderId(1);\r\n        localStorage.setItem(\"cart\", []);\r\n        dispatch(clearFilters());\r\n        dispatch(setNullItem())\r\n\r\n        // let products = await axiosService.setProduct(0);\r\n        // dispatch(setProducts([]));\r\n    }\r\n\r\n    const onSubmitHandler = (values) => {\r\n        pushOrder(values);\r\n        setVisible(false);\r\n        window.scrollTo(0,0);\r\n\r\n    }\r\n\r\n    let navigation = useNavigate();\r\n\r\n\r\n    const getSum = () => {\r\n        let sum = 0;\r\n        let arr = carts.map(el => {\r\n            sum += (el.price * el.number);\r\n            return el.price\r\n           })\r\n\r\n        return sum;\r\n    }\r\n\r\n    return (<>\r\n        {visible ?\r\n            <>\r\n            <Row>\r\n                    <Col xs={24} md={{span: 12, offset: 6}}>\r\n                        <div className=\"order-container\">\r\n                            <h2>\r\n                                Ваше замовлення\r\n                            </h2>\r\n                            <h2>\r\n                                   Вартість: {getSum()} грн\r\n                            </h2>\r\n                            <Row>\r\n                                <Col sm={{span: 22, offset: 1}}  lg={{span: 18, offset: 3}} xs={{span: 22, offset: 1}}>\r\n                                   {carts.map((element, index) => {\r\n                                    return (\r\n                                        <div className=\"card-checked\" key={\"card-checked\" + index}>\r\n                                        <Row>\r\n                                            <Col xs={6}>\r\n                                                <div className=\"card-checked-image\">\r\n                                                    <img src={element.image} alt=\"\" />\r\n                                                </div>\r\n                                            </Col>\r\n                                            <Col xs={17} offset={1}>\r\n                                                <div className=\"card-checked-content\">\r\n                                                    <div>\r\n                                                        <h4>\r\n                                                            {element.title}\r\n                                                        </h4>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <span>\r\n                                                            Ціна: {element.price} грн\r\n                                                        </span>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <span>\r\n                                                            Розмір: {element.size == 0 ? <span className=\"call-size\">Уточнювати при дзвінку</span> :\r\n                                                            <>{element.size}</>}\r\n                                                        </span>\r\n                                                    </div>\r\n\r\n                                                    <div>\r\n                                                        <span>\r\n                                                            Кількість: {element.number}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                    );\r\n                                   })}\r\n                                \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            \r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={{span: 20, offset: 2}} md={{span: 16, offset: 4}} lg={{span: 16, offset: 4}} xl={{span: 12, offset: 6}}>\r\n                        <div className=\"order-container\">\r\n                            <h2>\r\n                                Підтвердження замовлення\r\n                            </h2>\r\n                            <Formik\r\n                                initialValues={{\r\n                                    name: '',\r\n                                    surname: '',\r\n                                    parentName: '',\r\n                                    phoneNumber: '',\r\n                                    email: '',\r\n                                    post: '',\r\n                                }}\r\n                                validationSchema={yupValidation}\r\n                                onSubmit={onSubmitHandler}\r\n                            >\r\n                                <Form>\r\n                                    <Field id=\"name\" name=\"name\" label=\"Ім'я\" placeholder=\"Введіть своє ім'я\" />\r\n                                    <Field id=\"surname\" name=\"surname\" label=\"Прізвище\" placeholder=\"Введіть своє прізвище\" />\r\n                                    <Field id=\"parentName\" name=\"parentName\" label=\"По-батькові\" placeholder=\"Як Вас по-батькові\" />\r\n                                    <PhoneField id=\"phoneNumber\" name=\"phoneNumber\" label=\"Номер телефону\" placeholder=\"Введіть номер телефону\" />\r\n                                    <Field id=\"email\" name=\"email\" label=\"Електронна адреса\" placeholder=\"Введіть електронну адресу\" />\r\n                                    <Field id=\"post\" name=\"post\" label=\"Відділення пошти і місто\" placeholder=\"Куди Вам відправити (Нова пошта)?\" />\r\n                                    {carts.length > 0 &&\r\n                                    <CustomButton type=\"submit\" text={\"Підтвердити замовлення\"} />}\r\n                                </Form>\r\n                            </Formik>\r\n\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </>\r\n            : <div id=\"success-payment\" className=\"success-payment\">\r\n                    <h2>Оформлення успішне!</h2>\r\n                    <h3>Номер замовлення: {orderId}</h3>\r\n                    <Link to=\"/\">На головну</Link>\r\n                </div>}\r\n\r\n    </>);\r\n}\r\n\r\nexport default Order;"],"names":["_ref","text","_ref$type","type","_jsx","_Fragment","children","onClick","items","document","getElementsByClassName","i","length","checked","closest","click","className","role","placeholder","label","props","_objectWithoutProperties","_excluded","_useField","useField","_useField2","_slicedToArray","field","meta","_jsxs","htmlFor","name","id","_objectSpread","classNames","error","touched","_useState","useState","_useState2","setMask","useEffect","element","mask","IMask","Yup","required","surname","parentName","phoneNumber","matches","email","post","_useCookie","useCookie","_useCookie2","carts","useSelector","cart","visible","setVisible","_useState3","_useState4","orderId","setOrderId","dispatch","useDispatch","pushOrder","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","targets","JSON","stringify","_toConsumableArray","map","item","size","localStorage","setItem","clearFilters","setNullItem","stop","_x","apply","arguments","useNavigate","Row","Col","xs","md","span","offset","sum","el","price","number","getSum","sm","lg","index","src","image","alt","title","xl","Formik","initialValues","validationSchema","yupValidation","onSubmit","window","scrollTo","Form","Field","PhoneField","CustomButton","Link","to"],"sourceRoot":""}